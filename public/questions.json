{
"questions":[
    {
        "title": "大数加法",
        "id":1,
        "content": [
            "以字符串的形式读入两个数字，编写一个函数计算它们的和，以字符串形式返回。",
            "数据范围:len(s),len(t)≤100000len(s)，字符串仅由'0'~'9'构成",
            "要求:时间复杂度 O(n)"
        ],
        "examples": [
            {
                "input": "\"1\",\"99\"",
                "output": "\"100\"",
                "description": "1+99=100"
            },
            {
                "input": "\"10000\",\"\"",
                "output": "\"10000\"",
                "description": ""
            }
        ]
    },
    {
        "title": "重排链表",
        "id":2,
        "content": [
            "将给定的单链表L:L₀ → L₁ → ... Lₙ₋₁ → Lₙ",
            "重新排序为L:L₀ → Lₙ → L₁ → Lₙ₋₁ → L₂ ...",
            "数据范围：链表长度 0 ≤ n ≤ 20000 ，链表中每个节点的值满足 0 ≤ val ≤ 1000",
            "要求：空间复杂度 O(n) 并在链表上进行操作而不新建链表，时间复杂度 O(n)O(n)"
        ],
        "examples": [
            {
                "input": "{1,2,3,4}",
                "output": "{1,4,2,3}",
                "description": "给定head链表1->2->3->4, 重新排列为 1->4->2->3,会取head链表里面的值打印输出 1 "
            },
            {
                "input": "{1,2,3,4,5}",
                "output": "{1,5,2,4,3}",
                "description": "给定head链表1->2->3->4->5, 重新排列为 1->5>2->4->3,会取head链表里面的值打印输出"
            },
            {
                "input": "{}",
                "output": "{}",
                "description": ""
            }
        ]
    },
    {
        "title": "二叉树根节点到叶子节点的所有路径和",
        "id":3,
        "content": [
            "给定一个二叉树的根节点root，该树的节点值都在数字 0−9 之间，每一条从根节点到叶子节点的路径都可以用一个数字表示。\n1.该题路径定义为从树的根结点开始往下一直到叶子结点所经过的结点\n2.叶子节点是指没有子节点的节点\n3.路径只能从父节点到子节点，不能从子节点到父节点\n4.总节点数目为n",
            "例如根节点到叶子节点的一条路径是1→2→3,那么这条路径就用 123 来代替\n找出根节点到叶子节点的所有路径表示的数字之和,例如三节点一完全二叉树\n这颗二叉树一共有两条路径，\n根节点到叶子节点的路径1→2 用数字 12 代替\n根节点到叶子节点的路径1→3 用数字 13 代替\n所以答案为 12+13=25",
            "数据范围：节点数 0≤n≤100，保证结果在32位整型范围内",
            "要求：空间复杂度 O(n)，时间复杂度 O(n²)"
        ],
        "examples": [
            {
                "input": "{1,2,3}",
                "output": "25",
                "description": ""
            },
            {
                "input": "{1,0}",
                "output": "10",
                "description": ""
            },
            {
                "input": "{1,2,0,3,4}",
                "output": "257",
                "description": ""
            }
        ]
    },
    {
        "title": "栈的基本操作",
        "id":4
    },
    {
        "title": "队列的基本操作",
        "id":5
    },
    {
        "title": "树形结构基本操作",
        "id":6
    },
    {
        "title": "图形结构基本操作",
        "id":7
    },
    {
        "title": "数据库的创建与修改",
        "id":8
    },
    {
        "title": "软件工程项目开发实践",
        "id":9,
        "content": [
            "软件总体设计：依据图书管理员的需求设计软件表示",
            "要求：描述总体设计中模块层次结构的模型"
        ],
        "specialCodeArea": 3
    },
    {
        "title": "删除有序链表中重复的元素",
        "id":10
    },
    {
        "title": "删除链表的倒数第n个节点",
        "id":11
    },
    {
        "title": "环形链表的约瑟夫问题",
        "id":12
    },
    {
        "title": "判断一个链表是否为回文结构",
        "id":13
    },
    {
        "title": "按之字形顺序打印二叉树",
        "id":14
    },
    {
        "title": "实现二叉树先序，中序和后序排序",
        "id":15
    },
    {
        "title": "用两个栈实现队列",
        "id":16
    },
    {
        "title": "栈和排序",
        "id":17
    },
    {
        "title": "序列化二叉树",
        "id":18
    },
    {
        "title": "滑动窗口的最大值",
        "id":19
    },
    {
        "title": "从下到上打印二叉树",
        "id":20
    }
],
    "codeCondition":[
        
    ],
    "outclassQuestions":[
        {
            "title": "火车票查询工具开发",
            "id":1,
            "content": [
                "使用python3抓取12306网站信息提供一个命令行的火车票查询工具。",
                "目的: 通过该项目的实现，熟悉Python3基础及网络编程，以及docopt，requests，prettytable等库的使用",
                "项目难度: 中等"
            ],
            "examples": [
            ]
        },
        {
            "title": "停车场管理系统开发",
            "id":2,
            "content": [
                "对停车场停车管理系统进行简单模拟，以完成停车场的停车、出车、收费及查询停车场或便道信息的功能。",
                "目的: 以车辆为目标，熟练节点的结构设计，车位和车辆的栈、队列结构的表示用法。",
                "项目难度: 难"
            ],
            "examples": [
            ]
        },
        {
            "title": "电子投票系统设计",
            "id":3,
            "content": [
                "电子投票系统主要分为投票人系统和管理员系统，投票人系统输入要选举的候选人编号完成投票。投票人可以浏览候选人列表、输入序号查询候选人介绍。管理员可以初始化候选人信息并随时修改，查询当前各个候选人得票情况，以便得出最终被选出的候选人信息。当投票工程结束后，管理员选择清除投票信息，使之归零。",
                "目的: 熟悉数据的存储结构形式，掌握添加、删除、修改等操作的实现过程。",
                "项目难度: 难"
            ],
            "examples": [
            ]
        }
    ],
    "cusclassQuestions":[
        {
            "title": "自拟项目",
            "id":1,
            "content": [
                "在右边的编辑框内分别输入标题，项目实现的内容描述，拟采取的研究方案",
                "在多选选择框内选择组内成员或自行添加成员的学号和姓名",
                "最后点击确定按钮完成自拟项目创建"
            ],
            "examples": [
            ],
            "specialCodeArea": 2
        },
        {
            "title": "参考例子",
            "id":2,
            "content": [
                "标题: 关键词提取",
                "内容描述: 你有一个目录，放了你一个月的日记，都是 txt，为了避免分词的问题，假设内容都是英文，请统计出你认为每篇日记最重要的词",
                "研究方案: 研究方案A，研究思路为...",
                "团队成员: 成员A，成员B，成员C..."
            ],
            "examples": [
            ],
            "specialCodeArea": 2
        }
    ]
}